environment = "local"

bootstrap-servers = "localhost:9092"
bootstrap-servers = ${?KAFKA_BOOTSTRAP_SERVERS}

http-client-config {
  connect-timeout-secs = 30
  request-timeout-secs = 30
  max-retry-wait-milli-secs = 60000
  max-retries = 20
}

kafka-consumer-configuration {
  bootstrap-servers = ${bootstrap-servers}
  group-id = "asset_contract_reader_service"
  auto-offset-reset-config = "earliest"
  batch-size = 50
  batch-duration-ms = 100
}

kafka-producer-configuration {
  bootstrap-servers = ${bootstrap-servers}
}

input-topic-asset-contract-request {
  name = "asset_contract_request"
}

output-topic-asset-contract {
  name = "asset_contract"
}

output-topic-asset-contract-event-request {
  name = "asset_contract_event_request"
}

input-topic-asset-contract-event-request {
  name = "asset_contract_event_request"
}

output-topic-asset-contract-event {
  name = "asset_contract_event"
}

input-topic-address-contract-event {
  name = "asset_contract_event"
}

output-topic-address-request {
  name = "address_request"
}

input-topic-transaction-event-request {
  name = "address_request"
}

output-topic-transaction-event {
  name = "transaction_event"
}

rate-limit-open-sea {
  min-interval-ms=275
  max-concurrent=50
  max-queued=2147483647
}

rate-limit-covalent-hq {
  min-interval-ms=210
  max-concurrent=50
  max-queued=2147483647
}

rate-limit-etherscan {
  min-interval-ms=210
  max-concurrent=50
  max-queued=2147483647
}